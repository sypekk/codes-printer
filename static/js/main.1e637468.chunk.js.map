{"version":3,"sources":["Inputer.js","App.js","index.js"],"names":["NumberInputer","styled","input","_templateObject","Inputer","_ref","changeFn","hideFn","addFn","exceptions","text","title","columns","props","Object","objectWithoutProperties","react_default","a","createElement","disabled","off","className","placeholder","name","onChange","value","type","onClick","min","max","Containter","App_templateObject","number","Name","Serial","serial","replace","concat","Items","Fragment","list","map","items","App_Name","key","item","serials","App_Serial","App","state","handleButtonAdd","_this","newString","length","zonk","slice","RegExp","split","forEach","tmp","setState","prevState","toConsumableArray","handleButtonHide","handleChange","e","defineProperty","target","this","src_Inputer","assign","App_Items","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1e637468.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NumberInputer = styled.input`\r\n  width: 40px;\r\n  margin-left: 10px;\r\n`\r\n\r\nconst Inputer = ({ changeFn, hideFn, addFn, exceptions, text, title, columns, ...props }) => (\r\n  <div disabled={props.off ? true : false} className=\"App\">\r\n    <input placeholder='Wpisz nazwę sprzetu' name='title' onChange={changeFn} value={title} />\r\n    <input placeholder='Wklej numery seryjne' name='text' type=\"text\" onChange={changeFn} value={text} />\r\n    <input placeholder='Dodaj wyjątek' name='exceptions' onChange={changeFn} value={exceptions} />\r\n    <button onClick={addFn}>Dodaj</button>\r\n    <button onClick={hideFn}>Ukryj</button>\r\n    <label>\r\n      Kolumny:\r\n      <NumberInputer type='number' min='2' max='9' name='columns' onChange={changeFn} value={columns} />\r\n    </label>\r\n\r\n  </div>\r\n)\r\n\r\nexport default Inputer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Inputer from './Inputer';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nconst Containter = styled('div')`\r\n    display: grid;\r\n    grid-template-columns: repeat(${(props) => props.number}, 1fr);\r\n    grid-template-rows: repeat(auto - fill, 1fr);\r\n`\r\n\r\nconst Name = (props) => (\r\n  <div className='name'>{props.title}</div>\r\n)\r\n\r\n\r\nconst Serial = (props) => {\r\n  const serial = props.serial.replace('ZONKZONKZONK', ' ');\r\n  return (\r\n    <div className='code'>{`*${serial}*`}</div>\r\n  )\r\n}\r\n\r\nconst Items = (props) => {\r\n\r\n  return (\r\n    <>\r\n      {props.list.map(items => (\r\n        <>\r\n          <Name key={items.item} title={items.title} />\r\n          {items.serials.map(item => (\r\n            < Serial key={item} serial={item} />\r\n          )\r\n          )}\r\n        </>\r\n      )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  state = ({\r\n    text: '',\r\n    list: [],\r\n    off: false,\r\n    title: '',\r\n    columns: 3,\r\n    exceptions: '',\r\n  })\r\n\r\n\r\n\r\n  handleButtonAdd = () => {\r\n    const text = this.state.text;\r\n    const title = this.state.title;\r\n\r\n    const exceptions = this.state.exceptions;\r\n    let newString = '';\r\n    if (exceptions.length > 0) {\r\n      const zonk = exceptions.slice(0, exceptions.length - 1);\r\n      newString = text.replace(new RegExp(exceptions, 'gi'), `${zonk}ZONKZONKZONK`);\r\n    } else {\r\n      newString = text;\r\n    }\r\n    const split = newString.split(' ');\r\n    split.forEach(items => {\r\n      const tmp = items.split('\\t');\r\n      const item = {\r\n        title: title,\r\n        serials: tmp,\r\n      }\r\n      this.setState(prevState => ({\r\n        list: [...prevState.list, item]\r\n      }))\r\n    })\r\n    this.setState({\r\n      text: '',\r\n      title: '',\r\n    })\r\n  }\r\n\r\n  handleButtonHide = () => {\r\n    this.setState({\r\n      off: true,\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {!this.state.off ? <Inputer\r\n          {...this.state}\r\n          changeFn={this.handleChange}\r\n          hideFn={this.handleButtonHide}\r\n          addFn={this.handleButtonAdd}\r\n        /> : null}\r\n        <Containter number={this.state.columns}>\r\n          {this.state.list.length > 0 && <Items list={this.state.list} />}\r\n        </Containter>\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}