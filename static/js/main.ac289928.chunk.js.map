{"version":3,"sources":["Inputer.js","App.js","index.js"],"names":["NumberInputer","styled","input","_templateObject","Inputer","_ref","changeTextFn","hideFn","addFn","titleFn","columsFn","text","title","columns","props","Object","objectWithoutProperties","react_default","a","createElement","disabled","off","className","placeholder","onChange","value","type","onClick","min","max","Containter","App_templateObject","number","Name","Serial","concat","serial","Items","Fragment","list","map","items","App_Name","key","item","serials","App_Serial","App","state","handleButtonAdd","_this","split","forEach","tmp","setState","prevState","toConsumableArray","handleButtonHide","handleChangeText","e","target","handleChangeColums","handleChangeTitle","this","src_Inputer","assign","length","App_Items","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ac289928.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NumberInputer = styled.input`\r\n  width: 40px;\r\n  margin-left: 10px;\r\n`\r\n\r\nconst Inputer = ({ changeTextFn, hideFn, addFn, titleFn, columsFn, text, title, columns, ...props }) => (\r\n  <div disabled={props.off ? true : false} className=\"App\">\r\n    <input placeholder='Wpisz nazwę sprzetu' onChange={titleFn} value={title} />\r\n    <input placeholder='Wklej numery seryjne' type=\"text\" onChange={changeTextFn} value={text} />\r\n    <button onClick={addFn}>Dodaj</button>\r\n    <button onClick={hideFn}>Ukryj</button>\r\n    <label>\r\n      Kolumny:\r\n      <NumberInputer type='number' min='2' max='9' onChange={columsFn} value={columns} />\r\n    </label>\r\n  </div>\r\n)\r\n\r\nexport default Inputer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Inputer from './Inputer';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nconst Containter = styled('div')`\r\n    display: grid;\r\n    grid-template-columns: repeat(${(props) => props.number}, 1fr);\r\n    grid-template-rows: repeat(auto - fill, 1fr);\r\n`\r\n\r\nconst Name = (props) => (\r\n  <div className='name'>{props.title}</div>\r\n)\r\n\r\nconst Serial = (props) => (\r\n  <div className='code'>{`*${props.serial}*`}</div>\r\n)\r\n\r\nconst Items = (props) => {\r\n\r\n  return (\r\n    <>\r\n      {props.list.map(items => (\r\n        <>\r\n          <Name key={items.item} title={items.title} />\r\n          {items.serials.map(item => (\r\n            < Serial key={item} serial={item} />\r\n          )\r\n          )}\r\n        </>\r\n      )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  state = ({\r\n    text: '',\r\n    list: [],\r\n    off: false,\r\n    title: '',\r\n    columns: 3,\r\n  })\r\n\r\n\r\n  handleButtonAdd = () => {\r\n    const text = this.state.text;\r\n    const title = this.state.title;\r\n\r\n    const exceptions = 'CCH ';\r\n\r\n\r\n    // let count = 0;\r\n    // let position = text.indexOf(exceptions);\r\n    // // let splitt= '';\r\n\r\n    // while (position !== -1) {\r\n    //   count++;\r\n    //   position = text.indexOf(exceptions, position + 1);\r\n    //   let splitt = text.split(' ');\r\n    //   splitt.forEach(items => {\r\n    //   const tmp = items.split('\\t');\r\n    //   const item = {\r\n    //     title: title,\r\n    //     serials: tmp,\r\n    //   }\r\n    //   this.setState(prevState => ({\r\n    //     list: [...prevState.list, item]\r\n    //   }))\r\n    // })\r\n    // this.setState({\r\n    //   text: '',\r\n    //   title: '',\r\n    // })\r\n    // }\r\n\r\n    // console.log(count); // displays 4\r\n\r\n\r\n\r\n    // console.log(text);\r\n    // console.log(text.indexOf(exceptions));\r\n    const split = text.split(' ');\r\n    split.forEach(items => {\r\n      const tmp = items.split('\\t');\r\n      const item = {\r\n        title: title,\r\n        serials: tmp,\r\n      }\r\n      this.setState(prevState => ({\r\n        list: [...prevState.list, item]\r\n      }))\r\n    })\r\n    this.setState({\r\n      text: '',\r\n      title: '',\r\n    })\r\n  }\r\n\r\n\r\n  handleButtonHide = () => {\r\n    this.setState({\r\n      off: true,\r\n    })\r\n  }\r\n\r\n  handleChangeText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    })\r\n  }\r\n\r\n  handleChangeColums = (e) => {\r\n    this.setState({\r\n      columns: e.target.value,\r\n    })\r\n  }\r\n\r\n  handleChangeTitle = (e) => {\r\n    this.setState({\r\n      title: e.target.value,\r\n    })\r\n  }\r\n\r\n  //dodać liniowo CSS albo styled components zeby zrobić na kilka kolumn!!!!\r\n  render() {\r\n\r\n    // const number = this.state.columns;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {!this.state.off ? <Inputer\r\n          {...this.state}\r\n          changeTextFn={this.handleChangeText}\r\n          hideFn={this.handleButtonHide}\r\n          addFn={this.handleButtonAdd}\r\n          titleFn={this.handleChangeTitle}\r\n          columsFn={this.handleChangeColums}\r\n        /> : null}\r\n        <Containter number={this.state.columns}>\r\n          {this.state.list.length > 0 && <Items list={this.state.list} />}\r\n        </Containter>\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}